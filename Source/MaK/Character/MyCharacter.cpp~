#include "MyCharacter.h"
#include "Attack/AttackCollision.h"
#include "Components/ChildActorComponent.h"
#include "EnhancedInputComponent.h"

AMyCharacter::AMyCharacter() {
  abilityManager_ = CreateDefaultSubobject<UAbilityManager>("AbilityManager");
  skillActions_.SetNum(8);
  statusComponent_ =
      CreateDefaultSubobject<UStatusComponent>("StatusComponent");
  // 味方ポーンのタグはally
  this->Tags.Add("ally");
}

template<int index>
void AMyCharacter::DoAbility() {
  abilityManager_->Execute(0);
}

AMyCharacter::DoAbility()<1>;

AMyCharacter::~AMyCharacter() {}

void AMyCharacter::BeginPlay() {
  Super::BeginPlay();
  // attach component
}

void AMyCharacter::EndPlay(const EEndPlayReason::Type EndPlayReason) {
  Super::EndPlay(EndPlayReason);
}

void AMyCharacter::SetupPlayerInputComponent(
    UInputComponent *PlayerInputComponent) {
  Super::SetupPlayerInputComponent(PlayerInputComponent);

  if (EnhancedInputComponent != nullptr) {
    for (int i = 0; i < 8; i++) {
      EnhancedInputComponent->BindAction(skillActions_[i], ETriggerEvent::Started, this, &AMyCharacter::DoAbility<i>);
    }
    // Normal Attack
    EnhancedInputComponent->BindAction(
        normalAttackAction_, ETriggerEvent::Started, this, &AMyCharacter::DoAbility<0>);
  } else {
    UE_LOG(
        LogTemplateCharacter, Error,
        TEXT("'%s' Failed to find an Enhanced Input component! This template "
             "is built to use the Enhanced Input system. If you intend to use "
             "the legacy system, then you will need to update this C++ file."),
        *GetNameSafe(this));
  }
}
